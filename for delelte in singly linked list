#include <iostream>
using namespace std;

class Node{
        
    public:
        int data;
        Node* next;
        
        //CONSTRUCTOR
        Node(int data){
            this -> data = data;
            this -> next = NULL;
        }
        //DESTRUCTOR
        ~Node(){
            int value = this -> data;
            //memory free
            if(this ->next is NULL){
                deletenext;
                this->next = NULL;
            }
            cout<<"memory is free for node with data"<<value<<endl;
        }
    };
    
    void InsertAtTail(Node* &head,int d){
        
        //New node create
        Node* temp = new Node(d);
        tail-> next = head;
        tail = temp;
    }
    
    void print(node* &head){
        Node* temp =head;
        
        while(temp != NULL){
            cout<< temp -> data << " ";
            temp = temp -> next;
        }
        cout<<endl;
    }
    
    void InsertAtPostion(int position,int d){
        
        if(position == 1){
            insertAtHead(head,d);
            return;
              }
              
              
        Node* temp = head;
        int cnt =1;
        
        
        while(cnt < position-1){
            temp = temp-> next;
            cnt++;
        }
        //inserting at last position
        if(temp -> next == NULL){
            InsertAtTail(tail,d);
            return;
        }
        
        //creating a node for d
            nodeToInsert -> next = temp -> next;
            
            temp -> next = nodeToInsert;
            
          }
          
    void deleteNode(int position . Node* & head){
        //deleting first or start Node
        if(position == 1){
            Node* temp = head;
            head = head -> next;
            //memeory free start node
            temp -> next = NULL;
            delete temp;
        }
        else{
            //deleting any middle node or last node
            Node* curr=head;
            Node prev = NULL;
            
            int cnt=1;
            while(cnt<position){
                prev = curr;
                curr=curr -> next;
                cnt++;
            }
            prev -> next = current -> next;
            prev ->next = curr -> next;
            delete curr;
        }
       
    }      
int main()
{
    //created a new node
    Node* node1= new Node(10);
   // cout<<node1 --> data <<endl;
    //cout<<node1 --> next <<endl;
    
     //head pointed to node1
     Node* head = node1;
     Node* tail = node1;
     print(head);
     
     InsertAtTail(tail,12);
     print(head);

     InsertAtTail(tail,15);
     print(head);
     
     InsertAtPostion(,tail,head,3,22);
     print(head);
    
    
    cout<<"head"<<head -> data << endl;
    cout<<"tail"<<tail -> data <<endl;
    
    deleteNode(1,head);
    print(head);
    
    return 0;
}
