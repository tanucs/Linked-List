#include <iostream>
using namespace std;

class Node{
    public:
    int data;
    Node* next;
    
    //constructor
    Node(int d){
        this -> data=d;
        this->next=NULL;
        
    }
    ~Node(){
        int value=this->data;
        if(this->next !=NULL){
            delete next;
            next=NULL;
        }
        cout<<"memeory is free for node with data"<<value<<endl;
    }
};

void insertNode(Node* &tail,int element,int d){
    //assuming that the element is present in the list
    
    if(tail== NULL){
        Node* newNode= new Node(d);
        tail=newNode;
        newNode->next = newNode;
        
    }
    else{
        //non empty list\
        //assumingn found ->curr is representing element wala 
        
        Node* curr=tail;
        
        while(curr->data != element){
            curr = curr-> next;
        }
        
        //elemet found ->curr is representing element wala node
        Node* temp = new Node(d);
        temp->next = curr-> next;
        curr->next = temp;
    }
}
  
  void print(Node* tail){
      Node* temp =tail;
      
      do{
          cout<<tail -> data<<" ";
          tail=tail->next;
          
      }while(tail != temp);
      cout<<endl;
  }

  int main(){
      
      Node* tail=NULL;
      
   //empty list me insert kree hai
   insertNode(tail,5,3);
   print(tail);
   
   insertNode(tail,3,5);
   print(tail);
   
   insertNode(tail,5,7);
   print(tail);
   
   insertNode(tail,7,9);
   print(tail);
   
   insertNode(tail,5,6);
   print(tail);
   
   insertNode(tail,9,10);
   print(tail);
   
   insertNode(tail,3,4);
   print(tail);
   
    return 0;
}
